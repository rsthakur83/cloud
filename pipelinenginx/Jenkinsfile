pipeline {
    agent any
	 parameters {
     string(defaultValue: "v1", description: 'Image version', name: 'imageversion')
	 }
    environment{
        //DOCKER_TAG = env
        NEXUS_URL  = "172.31.34.232:8080"
        IMAGE_URL_WITH_TAG = "rsthakur83/nginx:${params.imageversion}"
    }
    stages{
        stage('Build Docker Image'){
            steps{
		sh "cd pipelinenginx"
                sh "docker build  -t ${IMAGE_URL_WITH_TAG} --file ./pipelinenginx/Dockerfile ."
            }
        }

	stage('Scan Image') {
		
		steps {
	    aquaMicroscanner imageName: "${IMAGE_URL_WITH_TAG}", notCompliesCmd: 'exit 1', onDisallowed: 'fail', outputFormat: 'html'
	    }
	}	    
        stage('Docker Image Push'){
            steps{
		    
                withCredentials([string(credentialsId: 'docker-pwd', variable: 'dockerpwd')]) {
                    sh "docker login -u rsthakur83 -p ${dockerpwd}"
                    sh "docker push ${IMAGE_URL_WITH_TAG}"
                }
            }
        }

        stage ('Wait for approval'){
		steps {
                input 'Approve deployment?'
            }
	}
	    
	    stage('Deploy Nginx App') {
	    
		    steps {
		    
		    sshagent(['masternode']) {
 			sh "ssh -o StrictHostKeyChecking=no ubuntu@10.10.0.117 ls -lh"
			sh "scp -o StrictHostKeyChecking=no -r pipelinenginx/myapp pipelinenginx/deploy.sh ubuntu@10.10.0.117:/home/ubuntu"
			sh "ssh -o StrictHostKeyChecking=no   ubuntu@52.10.162.213 chmod +x /home/ubuntu/deploy.sh"
			sh "ssh -o StrictHostKeyChecking=no   ubuntu@52.10.162.213 ./home/ubuntu/deploy.sh"
			}
		    }
	    }
    }    
}


