pipeline {
    agent any
	 parameters {
     string(defaultValue: "v1", description: 'Image version', name: 'imageversion')
	 }
    environment{
        //DOCKER_TAG = env
        NEXUS_URL  = "172.31.34.232:8080"
        IMAGE_URL_WITH_TAG = "rsthakur83/nginx:${params.imageversion}"
    }
    stages{
        stage('Build Docker Image'){
            steps{
		sh "cd pipelinenginx"
                sh "docker build  -t ${IMAGE_URL_WITH_TAG} --file ./pipelinenginx/Dockerfile ."
            }
        }
        stage('Nexus Push'){
            steps{
                withCredentials([string(credentialsId: 'docker-pwd', variable: 'dockerpwd')]) {
                    sh "docker login -u admin -p ${dockerpwd}"
                    sh "docker push ${IMAGE_URL_WITH_TAG}"
                }
            }
        }
        stage('Docker Deploy Dev'){
            steps{
                sshagent(['tomcat-dev']) {
                    withCredentials([string(credentialsId: 'nexus-pwd', variable: 'nexusPwd')]) {
                        sh "ssh ec2-user@172.31.0.38 docker login -u admin -p ${nexusPwd} ${NEXUS_URL}"
                    }
					// Remove existing container, if container name does not exists still proceed with the build
					sh script: "ssh ec2-user@172.31.0.38 docker rm -f nodeapp",  returnStatus: true
                    
                    sh "ssh ec2-user@172.31.0.38 docker run -d -p 8080:8080 --name nodeapp ${IMAGE_URL_WITH_TAG}"
                }
            }
        }
    }
}


