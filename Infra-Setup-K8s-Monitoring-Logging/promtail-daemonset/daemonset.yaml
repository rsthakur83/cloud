# promtail
# -config.file docs/promtail-local-config.yaml
#
# image: grafana/promtail:master

# container.withEnv([
#   container.envType.fromFieldPath('HOSTNAME', 'spec.nodeName'),
# ]) +
# container.mixin.securityContext.withPrivileged(true) +
# container.mixin.securityContext.withRunAsUser(0),

# promtail_daemonset:
#  daemonSet.new('promtail', [$.promtail_container]) +
#  daemonSet.mixin.spec.template.spec.withServiceAccount('promtail') +
#  $.util.configVolumeMount('promtail', '/etc/promtail') +
#  $.util.hostVolumeMount('varlog', '/var/log', '/var/log') +
#  $.util.hostVolumeMount('varlibdockercontainers', '/var/lib/docker/containers', '/var/lib/docker/containers', readOnly=true),

# Grab promtail_configs / scrape_configs from loki source

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: infra

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail
  namespace: infra
data:
  promtail.yml: |
    scrape_configs:
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ^$
        source_labels:
        - __meta_kubernetes_pod_label_name
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_label_name
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - replacement: /var/log/pods/$1
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    - job_name: kubernetes-pods-app
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: __host__
      - action: drop
        regex: ^$
        source_labels:
        - __meta_kubernetes_pod_label_app
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_label_app
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - replacement: /var/log/pods/*$1*/*/*.log
        source_labels:
          - __meta_kubernetes_pod_uid
        target_label: __path__
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: promtail
  name: promtail
  namespace: infra
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
      - args:
          - -client.url=http://xx.xx.xx.xx:3100/loki/api/v1/push # TOOD(adam): HTTPS
          - -config.file=/etc/promtail/promtail.yml
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/promtail:2.0.0
        imagePullPolicy: Always
        name: promtail
        ports:
        - containerPort: 80
          name: http-metrics
        resources:
          limits:
            cpu: 250m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 25Mi
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/promtail
          name: promtail
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccount: promtail
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: promtail
        name: promtail
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
  updateStrategy:
    type: RollingUpdate

---

#apiVersion: rbac.authorization.k8s.io/v1beta1
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch

---

#apiVersion: rbac.authorization.k8s.io/v1beta1
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
- kind: ServiceAccount
  name: promtail
  namespace: infra

---

